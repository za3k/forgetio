// Generated by CoffeeScript 1.6.2
var common, funcflow, model, sanitize;

common = require('../common');

funcflow = require('funcflow');

model = require('../database/model');

sanitize = require('validator').sanitize;

exports.login = function(req, res, data) {
  return res.render('home.ect', common.extend({
    page: 'Login',
    req: req
  }, data));
};

exports.loginPost = function(req, res) {
  var errorHandler, json, steps;

  json = req.body;
  console.log(json);
  steps = [
    function(step, err) {
      if (err != null) {
        step.errorHandler(err);
        return;
      }
      if ((json.email == null) || json.email === "") {
        step.errorHandler("Please include an email address");
        return;
      }
      if ((json.password == null) || json.password === "") {
        step.errorHandler("Please include a password");
        return;
      }
      return step.next();
    }, function(step, err) {
      if (err != null) {
        step.errorHandler(err);
        return;
      }
      return model.User.find({
        where: {
          email: json.email
        }
      }).success(step.next).failure(function(err) {
        common.logger.error(err);
        return errorHandler("There was a server error");
      });
    }, function(step, err, user) {
      if (err != null) {
        step.errorHandler(err);
        return;
      }
      if (user == null) {
        console.log("Invalid user");
        errorHandler("Invalid username or password.");
        return;
      }
      if (user.email !== json.email) {
        common.logger.error("Returned user had the wrong email");
        errorHandler("There was an error on the server.");
        return;
      }
      return step.next(user);
    }, function(step, err, user) {
      if (err != null) {
        step.errorHandler(err);
        return;
      }
      if (!require('password-hash').verify(sanitize(json.password.toLowerCase()).trim(), user.password)) {
        console.log("Invalid password");
        errorHandler("Invalid username or password.");
        return;
      }
      return step.next(user);
    }, function(step, err, user) {
      if (err != null) {
        step.errorHandler(err);
        return;
      }
      req.user.login(user);
      return step.next();
    }
  ];
  errorHandler = function(error) {
    json.errorMsg = (error != null ? error.message : void 0) != null ? error.message : error.toString();
    common.logger.error(json.errorMsg);
    delete json.password;
    return exports.login(req, res, json);
  };
  return funcflow(steps, {
    errorHandler: errorHandler
  }, function() {
    return res.redirect('/account.html');
  });
};

exports.ensureLogin = function(req, res, next) {
  if (req.user.loggedIn()) {
    return next();
  } else {
    return res.redirect('/login.html');
  }
};

exports.logout = function(req, res) {
  req.user.logout();
  return res.redirect('/login.html');
};
