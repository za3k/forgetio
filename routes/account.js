// Generated by CoffeeScript 1.6.2
var check, common, funcflow, model, sanitize;

check = require('validator').check;

common = require('../common');

model = require('../database/model');

funcflow = require('funcflow');

sanitize = require('validator').sanitize;

exports.account = function(req, res, data) {
  var u;

  u = req.user.getUser();
  return model.getCommunication(u, function(err, result) {
    var all, result_present;

    if (err) {
      common.logger.error(err);
    }
    all = common._.pluck(result, 'server_received');
    result_present = common._.compact(all);
    return res.render('account.ect', common.extend({
      page: 'Account',
      req: req,
      user: {
        messagesReceived: result_present.length,
        messagesSent: all.length - result_present.length,
        timezone: u.timezone_id,
        name: u.name,
        credits: u.credit,
        email: u.email,
        lowerTimeEstimate: u.credit / 10,
        upperTimeEstimate: u.credit / 5
      },
      warningLevel: function(daysLeft) {
        if (daysLeft < 1) {
          return "alert alert-error";
        } else if ((1 <= daysLeft && daysLeft < 7)) {
          return "alert";
        } else {
          return "alert alert-info";
        }
      }
    }, data));
  });
};

exports.accountPost = function(req, res) {
  var errorHandler, json, steps, user;

  json = req.body;
  user = req.user.getUser();
  steps = [
    function(step, err) {
      if (err) {
        step.errorHandler(err);
        return;
      }
      if (json.timezone === user.timezone_id) {
        exports.account(req, res);
      }
      check(json.timezone, 'Timezone is invalid!').isInt();
      return step.next(sanitize(json.timezone).toInt());
    }, function(step, err, timezone) {
      if (err) {
        step.errorHandler(err);
        return;
      }
      user.timezone_id = timezone;
      return user.save().success(step.next).failure(function(err) {
        common.logger.error("Error saving user's timezone", err);
        return step.errorHandler({
          message: "There was a server error!"
        });
      });
    }, function(step, err) {
      if (err) {
        step.errorHandler(err);
        return;
      }
      exports.account(req, res);
      return step.next();
    }
  ];
  errorHandler = function(error) {
    json.errorMsg = (error != null ? error.message : void 0) != null ? error.message : error.toString();
    common.logger.error(json.errorMsg);
    return exports.account(req, res, json);
  };
  return funcflow(steps, {
    errorHandler: errorHandler
  }, function() {
    return {};
  });
};
