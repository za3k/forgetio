// Generated by CoffeeScript 1.6.2
var common, model;

common = require('../common');

model = require('../database/model');

exports.results = function(req, res) {
  var user;

  user = req.user.getUser();
  return model.getCommunication(user, function(err, result) {
    var line, lines, reminder, reminder_id, reminders, _i, _len, _ref;

    if (err) {
      common.logger.error(err);
    }
    reminders = [];
    _ref = common._.groupBy(result, 'reminder_id');
    for (reminder_id in _ref) {
      lines = _ref[reminder_id];
      reminder = {
        text: lines[0].message,
        id: reminder_id,
        replies: []
      };
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        if (line.server_received) {
          reminder.replies.push({
            date: line.scheduled,
            reply: {
              text: line.received_body,
              time: line.server_received
            }
          });
        } else {
          reminder.replies.push({
            date: line.scheduled,
            reply: null
          });
        }
      }
      reminders.push(reminder);
    }
    return res.render('results.ect', {
      page: 'Results',
      req: req,
      reminders: reminders
    });
  });
};

exports.csvExport = function(req, res) {
  var user;

  user = req.user.getUser();
  return model.getCommunication(user, function(err, result) {
    var lines;

    if (err) {
      common.logger.error(err);
    }
    lines = result;
    if (req.params.id) {
      lines = common._.filter(lines, function(x) {
        return x.reminder_id.toString() === req.params.id;
      });
      console.log(lines);
    }
    if ((!req.params.id && lines) || (req.params.id && lines && lines.length > 0)) {
      res.type('text/plain');
      return res.render('csv.results.ect', {
        req: req,
        lines: lines
      });
    }
  });
};
